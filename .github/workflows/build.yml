name: Build and Push Docker Image

permissions:
  contents: read
  id-token: write

on:
  push:
    branches:
      - main

jobs:
  publish-image:
    runs-on: ubuntu-latest

    # Steps to setup the environment
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Load cached jar
        id: jar-cache
        uses: actions/cache@v4
        with:
          path: ./build/libs
          key: jar-${{ runner.os }}-${{ hashFiles('build.gradle.kts') }}-${{ hashFiles('src/main/kotlin/Main.kt') }}

      - name: Setup Gradle
        if: steps.jar-cache.outputs.cache-hit != 'true'
        uses: gradle/gradle-build-action@v3

      - name: Build with Gradle
        if: steps.jar-cache.outputs.cache-hit != 'true'
        run: ./gradlew build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::246770851643:role/einbuergerung-appointments-github-actions
          aws-region: eu-central-1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Publish Docker Images
        run: |
          aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin "246770851643.dkr.ecr.eu-central-1.amazonaws.com"
          docker build -t einbuergerung:amd64 --platform linux/amd64 .
          docker tag einbuergerung:amd64 "246770851643.dkr.ecr.eu-central-1.amazonaws.com/einbuergerung:amd64"
          docker push "246770851643.dkr.ecr.eu-central-1.amazonaws.com/einbuergerung:amd64"
      
