name: Build and Push Docker Image

permissions:
  contents: read
  id-token: write

on:
  push:
    branches:
      - main

jobs:
  publish-image:
    runs-on: ubuntu-latest

    # Steps to setup the environment
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Load cached jar
        id: jar-cache
        uses: actions/cache@v4
        with:
          path: ./build/libs
          key: jar-${{ runner.os }}-${{ hashFiles('build.gradle.kts') }}

      - name: Setup Gradle
        if: steps.jar-cache.outputs.cache-hit != 'true'
        uses: gradle/gradle-build-action@v3

      - name: Build with Gradle
        if: steps.jar-cache.outputs.cache-hit != 'true'
        run: ./gradlew build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::246770851643:role/einbuergerung-appointments-github-actions
          aws-region: eu-central-1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: 246770851643.dkr.ecr.eu-central-1.amazonaws.com/einburgerung
          flavor: |
            latest=true
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/arm32v7
          tags: latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
